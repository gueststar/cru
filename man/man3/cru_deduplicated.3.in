.TH CRU_DEDUPLICATED 3 @DATE_VERSION_TITLE@
.SH NAME
cru_deduplicated \- fuse duplicate edges and vertices in a graph
.SH SYNOPSIS
#include <cru/cru.h>
.sp
.BR cru_graph
.BR cru_deduplicated
(
.br
.BR cru_graph
.I g
,
.br
.BR cru_kill_switch
.I k
,
.br
unsigned
.I lanes
,
.br
int *
.I err
)
.SH DESCRIPTION
This function detects duplicate vertices and edges in a graph
.I g
according to the orderings specified at the time of its creation, and
fuses the duplicates.
.TP
*
If two different vertices in the given graph are
identical according to the equality relation, then there is only one
vertex identical to both of them in the result.
.TP
*
Any outgoing edge from either of the original vertices becomes an
outgoing edge from the resulting vertex, and any incoming edge to
either vertex becomes an incoming edge to the result.
.TP
*
Any two identically labeled edges in the same direction between the
same two vertices are replaced by a single edge having that label.
.\"killsw
In this case, the graph
.I g
is reclaimed.
.\"lanes
.P
For purposes of memory management,
the graph
.I g
is consumed by
.BR cru_deduplicated
and must not be used or reclaimed subsequently by the caller.
.SH RETURN VALUE
On successful completion, the returned value is a pointer to a graph
derived from
.I g
by deduplicating it in place. Applications should treat the returned
value as opaque but may pass it as a parameter to other library
functions. In the event of any error, a NULL pointer is returned. A
NULL pointer is also returned if the graph
.I g
is
NULL,
which in this case represents an empty graph and is not in itself an
error.
.SH ERRORS
.\"errs
.TP
.BR ENOMEM
There is insufficient memory to allocate all necessary resources.
.TP
.BR EAGAIN
Resources or permissions are insufficient to create a thread.
.TP
.BR CRU_BADGPH
The parameter
.I g
refers to an invalid or corrupted graph.
.TP
.BR CRU_BADKIL
The parameter
.I k
refers to an invalid or corrupted kill switch structure.
.TP
.BR CRU_INTKIL
The operation was stopped by user intervention using the kill switch
.I k.
.TP
.BR CRU_UNDEQU
The graph's edge labels are dynamically allocated but no
edge equality relation was defined when the graph was created.
.TP
.BR CRU_UNDHSH
The graph's edge labels are dynamically allocated but no
edge hash function was defined when the graph was created.
.SH NOTES
Graphs built by the
.BR cru_built
function necessarily have mutually distinct vertices but are allowed
duplicate edges. Graphs with duplicate vertices may nevertheless result from
the
.BR cru_mutated,
.BR cru_fabricated,
and
.BR cru_crossed
library functions depending on user-defined specifications. These
graphs may benefit from deduplication.
.SH FILES
.I @INCDIR@/cru.h
.P
.I @INCDIR@/data_types.h
.P
.I @INCDIR@/error_codes.h
.SH SEE ALSO
@SEE_ALSO@
.SH AUTHOR
Dennis Furey 
.MT @MAINTAINER_EMAIL@
.ME
.SH PROJECT PAGE
.UR @CMAKE_PROJECT_HOMEPAGE_URL@
.UE
